@page "/personas"

@inject HttpClient httpSrv;
@inject NavigationManager navigationSrv;
@using BlazorPeople.Models;

@if (cargando)
{
    <iframe src="https://giphy.com/embed/hWZBZjMMuMl7sWe0x8" width="1000" height="360" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
}
else{
    <h3>Lista De Personas</h3>

        <style>
            .nav-link {
                text-decoration: none;              
            }
            .nav-link:hover{
                background-color: #0056B4;
                color:white;
                
            }
            .ancho{
                width:300px;
                border:solid 3px gray;
                padding:10px;
                border-radius:4%; 

            }
            
        </style>


        <EditForm Model="person" OnValidSubmit="buscarPersona">
            <label class="row mx-4 mt-3 h5">Buscar persona</label>
            <input type="text" class="mx-4 mb-4 ancho" @bind="idbuscado" required placeholder="Ingrese el numero de Identificacion..." />
            <button type="submit" class="btn btn-success rounded ml-3"><i class="fa-solid fa-magnifying-glass" style="color: #ffffff;"></i>Buscar</button>
        </EditForm>

        <div class="btn-group">
            <button class="btn btn-primary text-center rounded nav-link p-2 me-3" @onclick="Add"><span class="oi oi-plus"></span><strong>Agregar Usuario</strong></button>
            <button class="btn btn-secondary rounded p-2" @onclick="OnInitializedAsync"><i class="oi oi-person" style="color: #ffffff;"></i>Ver Lista</button>
        </div>

        @if (personasFiltradas != null && personasFiltradas.Any()) { 
        <table class="table">
            <thead>
                <tr>
                    <th>Tipo Identificacion</th>
                    <th>Identificacion</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Estado civil</th>
                    <th>Fecha de nacimiento</th>
                    <th>Correo</th>
                    <th>Telefono</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in personasFiltradas)
                {
                    <tr>
                        <td>@user.TipoIdentificacion</td>
                        <td>@user.Identificacion</td>
                        <td>@user.Nombre</td>
                        <td>@user.Apellido</td>
                        <td>@user.Estado</td>
                        <td>@user.FechaNacimiento.ToString("dd/MM/yyy")</td>
                        <td>@user.Correo</td>
                        <td>@user.Celular</td>
                        <td class="w-5"><NavLink class="btn-primary text-center p-2 btn-lg nav-link" href=@($"/personaunica/{user.Id}")><span class="oi oi-eye"></span>Consultar</NavLink></td>
                    </tr>
                }

            </tbody>
        </table>
    }
    else if(noResultados && !personasFiltradas.Any())
    {
       <h3 class="text-lg m-4 text-center" style="color:darkgray;">No hay resultados para esta busqueda <i class="fa-solid fa-face-sad-tear fa-lg" style="color: #cccccc;"></i></h3>

    }

}

@code {
    private bool noResultados = false;
    private int? idbuscado;
    private Persona[] personas;
    private Persona[] personasFiltradas;
    private Persona person = new Persona();
    private bool cargando;

    protected override async Task OnInitializedAsync()
    {
        cargando = true;
        await Task.Yield();
        personas = await httpSrv.GetFromJsonAsync<Persona[]>("api/personas");
        personasFiltradas = personas;
        cargando = false;
        noResultados = false; 
    }


    public void Add()
    {
        navigationSrv.NavigateTo("/agregar");
    }

    private void buscarPersona()
    {

        personasFiltradas = personas.Where(p => p.Identificacion == idbuscado).ToArray();
        noResultados = true;

       

    }

    
}
