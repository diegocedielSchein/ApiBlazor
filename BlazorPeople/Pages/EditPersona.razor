@page "/Editar/{Id:int}"


@inject HttpClient Http;
@using BlazorPeople.Models;
@inject NavigationManager NavigationManager;

<h3>Editar Persona</h3>
<style>
    .ancho {
        width: 500px;
    }
</style>

@if (persona == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="persona" OnValidSubmit="ActualizarPersona">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Nombre:</label>
            <InputText id="Nombre" @bind-Value="persona.Nombre" required class="form-control ancho" />
            <ValidationMessage For="@(() => persona.Nombre)" />
        </div>


        <div class="form-group">
            <label>Apellido:</label>
            <InputText id="Apellido" @bind-Value="persona.Apellido" required class="form-control ancho" />
            <ValidationMessage For="@(() => persona.Apellido)" />
        </div>


        <div class="form-group">
            <label>Tipo Identificacion:</label>
            <InputSelect id="TipoIdentificacion" @bind-Value="persona.TipoIdentificacion" required class="form-control ancho">
                <option value="">Seleccion el tipo de documento--</option>
                <option value="CC">Cedula de ciudadania</option>
                <option value="TI">Tarjeta de identidad</option>
                <option value="CE">Cedula Extranjera</option>
            </InputSelect>
            <ValidationMessage For="@(() => persona.TipoIdentificacion)" />
        </div>


        <div class="form-group">
            <label>Identificacion:</label>
            <InputNumber id="Identificacion" @bind-Value="persona.Identificacion" required class="form-control ancho" />
            <ValidationMessage For="@(() => persona.Identificacion)" />
        </div>


        <div class="form-group">
            <label>Estado Civil:</label>
            <InputSelect id="Estado" @bind-Value="persona.Estado" required class="form-control ancho">
                <option value="">Seleccione su estado civil--</option>
                <option value="soltero">Soltero</option>
                <option value="casado">Casado</option>
            </InputSelect>
            <ValidationMessage For="@(() => persona.Estado)" />
        </div>


        <div class="form-group">
            <label>Fecha de Nacimiento:</label>
            <InputDate id="FechaNacimiento" @bind-Value="persona.FechaNacimiento" required class="form-control ancho" />
            <ValidationMessage For="@(() => persona.FechaNacimiento)" />
        </div>


        <div class="form-group">
            <label>Celular:</label>
            <InputNumber id="Celular" @bind-Value="persona.Celular" required class="form-control ancho" />
            <ValidationMessage For="@(() => persona.Celular)" />
        </div>


        <div class="form-group">
            <label>Correo:</label>
            <InputText id="Correo" @bind-Value="persona.Correo" required class="form-control ancho" />
            <ValidationMessage For="@(() => persona.Correo)" />
        </div>

            <button type="submit" class="btn btn-primary mt-3 p-2"><span class="oi oi-reload ml-2"></span>Actualizar</button>
            <button class="btn btn-success mt-3 p-2" @onclick="Volver"><span class="oi oi-chevron-left ml-2"></span>Volver</button>
    </EditForm>
}
@code {
    [Parameter]
    public int Id { get; set; }


    private Persona persona;

    protected override async Task OnInitializedAsync()
    {
        persona = await Http.GetFromJsonAsync<Persona>($"api/personas/{Id}");
    }


    private async Task ActualizarPersona()
    {

        await Http.PutAsJsonAsync($"api/personas/{Id}", persona);
        NavigationManager.NavigateTo($"/personaunica/{Id}");
    }

    public void Volver()
    {
        NavigationManager.NavigateTo($"/personaunica/{Id}");
    }
}
