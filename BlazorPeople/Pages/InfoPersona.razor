@page "/personaunica/{IdAttr:int}"

@inject IJSRuntime JSRuntime;
@inject HttpClient httpSrv;
@inject NavigationManager NavigationManagerSrv;
@using BlazorPeople.Models;

<h3>Datos de la Persona</h3>

@if (persona == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <tbody>
            <tr>
                <th scope="row">Nombre:</th>
                <td>@persona.Nombre</td>
            </tr>
            <tr>
                <th scope="row">Apellido:</th>
                <td>@persona.Apellido</td>
            </tr>
            <tr>
                <th scope="row">Tipo Identificación:</th>
                <td>@persona.TipoIdentificacion</td>
            </tr>

            <tr>
                <th scope="row">Numero de identificacion:</th>
                <td>@persona.Identificacion</td>
            </tr>
            <tr>
                <th scope="row">Estado civil:</th>
                <td>@persona.Estado</td>
            </tr>
            <tr>
                <th scope="row">Celular</th>
                <td>@persona.Celular</td>
            </tr>

            <tr>
                <th scope="row">Fecha de Nacimiento</th>
                <td>@persona.FechaNacimiento.ToString("dd/MM/yyy")</td>
            </tr>
            <tr>
                <th scope="row">Correo:</th>
                <td>@persona.Correo</td>
            </tr>

        </tbody>
    </table>
    <button class="btn btn-danger mb-3" @onclick="()=> ConfirmDeleteUser(persona.Id)"><span class="oi oi-trash"></span>Eliminar</button>
    <NavLink class="btn btn-warning mb-3" href=@($"/Editar/{persona.Id}")><span class="oi oi-pencil"></span>Editar</NavLink>
    <button class="btn btn-secondary mb-3" @onclick="()=> GenerarPdf()"><i class="fa-regular fa-file-pdf" style="color: #ec5b51;"></i>Informe</button>
    <button class="btn btn-success mb-3" @onclick="Volver"><span class="oi oi-circle-check"></span>Terminado</button>
    
}

@if (ShowDeleteUser)
{
    <div class="modal" tabindex="-1" style="display:block">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Eliminar Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CancelPersona"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas eliminar este usuario?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" @onclick="EliminarPersona">Sí</button>
                    <button type="button" class="btn btn-secondary" @onclick="CancelPersona">No</button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    [Parameter]
    public int IdAttr { get; set; }

    public int UserIdDelete;
    private bool ShowDeleteUser;
    private Persona persona;

    protected override async Task OnInitializedAsync()
    {
        persona = await httpSrv.GetFromJsonAsync<Persona>($"api/personas/{IdAttr}");
    }

    public void ConfirmDeleteUser(int UserId)
    {
        UserIdDelete = UserId;
        ShowDeleteUser = true;
    }


    private async Task EliminarPersona()
    {
        IdAttr = UserIdDelete;
        await httpSrv.DeleteAsync($"api/personas/{IdAttr}");
        NavigationManagerSrv.NavigateTo("/personas");

    }


    public void CancelPersona()
    {
        ShowDeleteUser = false;
    }

    public void Volver()
    {
        NavigationManagerSrv.NavigateTo("/personas");
    }

    private async Task GenerarPdf()
    {
        var response = await httpSrv.GetAsync($"api/pdf/{IdAttr}");
        response.EnsureSuccessStatusCode();

        var pdfBytes = await response.Content.ReadAsByteArrayAsync();

        await JSRuntime.InvokeVoidAsync("descargarpdf", pdfBytes, $"{persona.Nombre}_{persona.Apellido}.pdf", "application/pdf");
    }

}
